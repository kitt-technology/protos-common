// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common.proto

package common

import (
	_ "github.com/kitt-technology/protoc-gen-graphql/graphql"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Money struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The three-letter currency code defined in ISO 4217.
	CurrencyCode string `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	// The whole units of the amount.
	// For example if `currencyCode` is `"GBP"`, then 1 unit is one UK penny.
	Units         int64 `protobuf:"varint,2,opt,name=units,proto3" json:"units,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Money) Reset() {
	*x = Money{}
	mi := &file_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Money) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *Money) GetUnits() int64 {
	if x != nil {
		return x.Units
	}
	return 0
}

type Coordinate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The latitude in degrees. It must be in the range [-90.0, +90.0].
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// The longitude in degrees. It must be in the range [-180.0, +180.0].
	Lng           float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	mi := &file_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Coordinate) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Coordinate) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type Int32Range struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           int32                  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           int32                  `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int32Range) Reset() {
	*x = Int32Range{}
	mi := &file_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int32Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32Range) ProtoMessage() {}

func (x *Int32Range) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32Range.ProtoReflect.Descriptor instead.
func (*Int32Range) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *Int32Range) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Int32Range) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Int32OptionalRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           *int32                 `protobuf:"varint,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max           *int32                 `protobuf:"varint,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int32OptionalRange) Reset() {
	*x = Int32OptionalRange{}
	mi := &file_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int32OptionalRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32OptionalRange) ProtoMessage() {}

func (x *Int32OptionalRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32OptionalRange.ProtoReflect.Descriptor instead.
func (*Int32OptionalRange) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *Int32OptionalRange) GetMin() int32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *Int32OptionalRange) GetMax() int32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type StringRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           string                 `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           string                 `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringRange) Reset() {
	*x = StringRange{}
	mi := &file_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringRange) ProtoMessage() {}

func (x *StringRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringRange.ProtoReflect.Descriptor instead.
func (*StringRange) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *StringRange) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *StringRange) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

type MoneyRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           *Money                 `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           *Money                 `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoneyRange) Reset() {
	*x = MoneyRange{}
	mi := &file_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoneyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyRange) ProtoMessage() {}

func (x *MoneyRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyRange.ProtoReflect.Descriptor instead.
func (*MoneyRange) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *MoneyRange) GetMin() *Money {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *MoneyRange) GetMax() *Money {
	if x != nil {
		return x.Max
	}
	return nil
}

type DateRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           *Date                  `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           *Date                  `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	mi := &file_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *DateRange) GetMin() *Date {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *DateRange) GetMax() *Date {
	if x != nil {
		return x.Max
	}
	return nil
}

type Date struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
	// a year.
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
	// month and day.
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
	// to specify a year by itself or a year and month where the day isn't
	// significant.
	Day           int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Date) Reset() {
	*x = Date{}
	mi := &file_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *Date) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type Address struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreetAddress string                 `protobuf:"bytes,1,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	Town          string                 `protobuf:"bytes,2,opt,name=town,proto3" json:"town,omitempty"`
	Country       string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	PostalCode    string                 `protobuf:"bytes,4,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *Address) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

func (x *Address) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

type DateTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a
	// datetime without a year.
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	// Required. Month of year. Must be from 1 to 12.
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	// Required. Day of month. Must be from 1 to 31 and valid for the year and
	// month.
	Day int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	// Required. Hours of day in 24 hour format. Should be from 0 to 23. An API
	// may choose to allow the value "24:00:00" for scenarios like business
	// closing time.
	Hours int32 `protobuf:"varint,4,opt,name=hours,proto3" json:"hours,omitempty"`
	// Required. Minutes of hour of day. Must be from 0 to 59.
	Minutes int32 `protobuf:"varint,5,opt,name=minutes,proto3" json:"minutes,omitempty"`
	// Required. Seconds of minutes of the time. Must normally be from 0 to 59. An
	// API may allow the value 60 if it allows leap-seconds.
	Seconds int32 `protobuf:"varint,6,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Required. Fractions of seconds in nanoseconds. Must be from 0 to
	// 999,999,999.
	Nanos int32 `protobuf:"varint,7,opt,name=nanos,proto3" json:"nanos,omitempty"`
	// Optional. UTC offset in seconds. Must be whole seconds, between -18 hours and +18 hours.
	// For example, a UTC offset of -4:00 would be represented as -14400
	UtcOffsetSeconds int64 `protobuf:"varint,8,opt,name=utc_offset_seconds,json=utcOffsetSeconds,proto3" json:"utc_offset_seconds,omitempty"`
	// Optional. IANA Time Zone Database time zone, e.g. "America/New_York".
	TimeZone      string `protobuf:"bytes,9,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateTime) Reset() {
	*x = DateTime{}
	mi := &file_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTime) ProtoMessage() {}

func (x *DateTime) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTime.ProtoReflect.Descriptor instead.
func (*DateTime) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *DateTime) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *DateTime) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *DateTime) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *DateTime) GetHours() int32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *DateTime) GetMinutes() int32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *DateTime) GetSeconds() int32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *DateTime) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

func (x *DateTime) GetUtcOffsetSeconds() int64 {
	if x != nil {
		return x.UtcOffsetSeconds
	}
	return 0
}

func (x *DateTime) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

type Visibility struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Visibility:
	//
	//	*Visibility_Unset
	//	*Visibility_Public
	//	*Visibility_Private
	Visibility    isVisibility_Visibility `protobuf_oneof:"visibility"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Visibility) Reset() {
	*x = Visibility{}
	mi := &file_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Visibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Visibility) ProtoMessage() {}

func (x *Visibility) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Visibility.ProtoReflect.Descriptor instead.
func (*Visibility) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *Visibility) GetVisibility() isVisibility_Visibility {
	if x != nil {
		return x.Visibility
	}
	return nil
}

func (x *Visibility) GetUnset() bool {
	if x != nil {
		if x, ok := x.Visibility.(*Visibility_Unset); ok {
			return x.Unset
		}
	}
	return false
}

func (x *Visibility) GetPublic() bool {
	if x != nil {
		if x, ok := x.Visibility.(*Visibility_Public); ok {
			return x.Public
		}
	}
	return false
}

func (x *Visibility) GetPrivate() bool {
	if x != nil {
		if x, ok := x.Visibility.(*Visibility_Private); ok {
			return x.Private
		}
	}
	return false
}

type isVisibility_Visibility interface {
	isVisibility_Visibility()
}

type Visibility_Unset struct {
	// Default unset state
	Unset bool `protobuf:"varint,1,opt,name=unset,proto3,oneof"`
}

type Visibility_Public struct {
	// E.g. is visible to all tenants
	Public bool `protobuf:"varint,2,opt,name=public,proto3,oneof"`
}

type Visibility_Private struct {
	// E.g. is visible to only specific people
	Private bool `protobuf:"varint,3,opt,name=private,proto3,oneof"`
}

func (*Visibility_Unset) isVisibility_Visibility() {}

func (*Visibility_Public) isVisibility_Visibility() {}

func (*Visibility_Private) isVisibility_Visibility() {}

var File_common_proto protoreflect.FileDescriptor

const file_common_proto_rawDesc = "" +
	"\n" +
	"\fcommon.proto\x12\x06common\x1aCgithub.com/kitt-technology/protoc-gen-graphql/graphql/graphql.proto\"G\n" +
	"\x05Money\x12#\n" +
	"\rcurrency_code\x18\x01 \x01(\tR\fcurrencyCode\x12\x14\n" +
	"\x05units\x18\x02 \x01(\x03R\x05units:\x03\xf8C\x01\"0\n" +
	"\n" +
	"Coordinate\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lng\x18\x02 \x01(\x01R\x03lng\"0\n" +
	"\n" +
	"Int32Range\x12\x10\n" +
	"\x03min\x18\x01 \x01(\x05R\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x05R\x03max\"R\n" +
	"\x12Int32OptionalRange\x12\x15\n" +
	"\x03min\x18\x01 \x01(\x05H\x00R\x03min\x88\x01\x01\x12\x15\n" +
	"\x03max\x18\x02 \x01(\x05H\x01R\x03max\x88\x01\x01B\x06\n" +
	"\x04_minB\x06\n" +
	"\x04_max\"1\n" +
	"\vStringRange\x12\x10\n" +
	"\x03min\x18\x01 \x01(\tR\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\tR\x03max\"N\n" +
	"\n" +
	"MoneyRange\x12\x1f\n" +
	"\x03min\x18\x01 \x01(\v2\r.common.MoneyR\x03min\x12\x1f\n" +
	"\x03max\x18\x02 \x01(\v2\r.common.MoneyR\x03max\"K\n" +
	"\tDateRange\x12\x1e\n" +
	"\x03min\x18\x01 \x01(\v2\f.common.DateR\x03min\x12\x1e\n" +
	"\x03max\x18\x02 \x01(\v2\f.common.DateR\x03max\"B\n" +
	"\x04Date\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\x12\x14\n" +
	"\x05month\x18\x02 \x01(\x05R\x05month\x12\x10\n" +
	"\x03day\x18\x03 \x01(\x05R\x03day\"\x7f\n" +
	"\aAddress\x12%\n" +
	"\x0estreet_address\x18\x01 \x01(\tR\rstreetAddress\x12\x12\n" +
	"\x04town\x18\x02 \x01(\tR\x04town\x12\x18\n" +
	"\acountry\x18\x03 \x01(\tR\acountry\x12\x1f\n" +
	"\vpostal_code\x18\x04 \x01(\tR\n" +
	"postalCode\"\xf6\x01\n" +
	"\bDateTime\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\x12\x14\n" +
	"\x05month\x18\x02 \x01(\x05R\x05month\x12\x10\n" +
	"\x03day\x18\x03 \x01(\x05R\x03day\x12\x14\n" +
	"\x05hours\x18\x04 \x01(\x05R\x05hours\x12\x18\n" +
	"\aminutes\x18\x05 \x01(\x05R\aminutes\x12\x18\n" +
	"\aseconds\x18\x06 \x01(\x05R\aseconds\x12\x14\n" +
	"\x05nanos\x18\a \x01(\x05R\x05nanos\x12,\n" +
	"\x12utc_offset_seconds\x18\b \x01(\x03R\x10utcOffsetSeconds\x12\x1b\n" +
	"\ttime_zone\x18\t \x01(\tR\btimeZone:\x03\xf8C\x01\"h\n" +
	"\n" +
	"Visibility\x12\x16\n" +
	"\x05unset\x18\x01 \x01(\bH\x00R\x05unset\x12\x18\n" +
	"\x06public\x18\x02 \x01(\bH\x00R\x06public\x12\x1a\n" +
	"\aprivate\x18\x03 \x01(\bH\x00R\aprivateB\f\n" +
	"\n" +
	"visibilityBc\x82B/github.com/kitt-technology/protos-common/commonZ/github.com/kitt-technology/protos-common/commonb\x06proto3"

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData []byte
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)))
	})
	return file_common_proto_rawDescData
}

var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_common_proto_goTypes = []any{
	(*Money)(nil),              // 0: common.Money
	(*Coordinate)(nil),         // 1: common.Coordinate
	(*Int32Range)(nil),         // 2: common.Int32Range
	(*Int32OptionalRange)(nil), // 3: common.Int32OptionalRange
	(*StringRange)(nil),        // 4: common.StringRange
	(*MoneyRange)(nil),         // 5: common.MoneyRange
	(*DateRange)(nil),          // 6: common.DateRange
	(*Date)(nil),               // 7: common.Date
	(*Address)(nil),            // 8: common.Address
	(*DateTime)(nil),           // 9: common.DateTime
	(*Visibility)(nil),         // 10: common.Visibility
}
var file_common_proto_depIdxs = []int32{
	0, // 0: common.MoneyRange.min:type_name -> common.Money
	0, // 1: common.MoneyRange.max:type_name -> common.Money
	7, // 2: common.DateRange.min:type_name -> common.Date
	7, // 3: common.DateRange.max:type_name -> common.Date
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	file_common_proto_msgTypes[3].OneofWrappers = []any{}
	file_common_proto_msgTypes[10].OneofWrappers = []any{
		(*Visibility_Unset)(nil),
		(*Visibility_Public)(nil),
		(*Visibility_Private)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
